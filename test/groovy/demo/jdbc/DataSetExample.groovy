package groovy.demo.jdbc

import groovy.sql.*
import java.util.logging.*
import java.text.*

class DataSetExample extends GroovyTestCase {
	def db

	void setUp() {
		// To see what's going on
		Logger.getLogger('groovy.sql').level = Level.FINE

		// Initialise an in-memory HSQL instance
		def source = new org.hsqldb.jdbc.jdbcDataSource()
		source.database = 'jdbc:hsqldb:mem:Groovy'
		source.user     = 'sa'
		source.password = ''
		db = new groovy.sql.Sql(source)

		db.execute '''
		DROP    INDEX athleteIdx IF EXISTS;
		DROP    TABLE Athlete    IF EXISTS;
		CREATE TABLE Athlete (
		     athleteId    INTEGER GENERATED BY DEFAULT AS IDENTITY,
		     firstname    VARCHAR(64),
		     lastname     VARCHAR(64),
		     dateOfBirth  DATE
		);
		CREATE INDEX athleteIdx ON Athlete (athleteId);
		'''

		// Similar to a PreparedStatement
		String athleteInsert = '''
		    INSERT INTO Athlete (firstname, lastname, dateOfBirth)
		                VALUES (?, ?, ?);
		'''
		db.execute athleteInsert, ['Paul',    'Tergat',     '1969-06-17']
		db.execute athleteInsert, ['Khalid', 'Khannouchi', '1971-12-22']
		db.execute athleteInsert, ['Ronaldo', 'da Costa',   '1970-06-07']
	}

	void testShouldDoTheUsualDatabaseStuff() {
		// DataSets - quick & dirty ORM
		DataSet athleteSet = db.dataSet('Athlete')

		assert athleteSet.rows().size() == 3

		// Auto-committed insert
		athleteSet.add(firstname: 'Paula', lastname: 'Radcliffe', dateOfBirth: '1973-12-17')

		assert athleteSet.rows().size() == 4

		athleteSet.each { println it.firstname }
	}

	void tearDown() {
		db.close()
	}
}